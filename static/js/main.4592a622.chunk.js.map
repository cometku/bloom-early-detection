{"version":3,"sources":["components/LocationReadout.js","App.js","index.js"],"names":["Title","Typography","Text","oneMonthChangeCalculation","oneMonthArray","chloroConcentrations","map","day","y","slice","makeTimeSeriesAxes","month_data","date_timeseries","timeseries","i","length","push","x","Date","LocationReadout","props","location","useState","hoveredValue","setHoveredValue","_forgetValue","_rememberValue","value","level","properties","name","strong","ONE_MONTH","span","title","precision","valueStyle","color","prefix","ArrowUpOutlined","suffix","ArrowDownOutlined","style","paddingTop","ONE_FORECAST","chloroAForecast","confidenceInterval","toFixed","xType","xPadding","yPadding","height","width","tickLabelAngle","data","size","onValueMouseOver","onValueMouseOut","LocationSpecific","Select","Option","INITIAL_VIEW_STATE","latitude","longitude","zoom","bearing","pitch","pinsColorRange","heatmapColorRange","App","vizType","setVizType","setLocation","layers","chlorData","HeatmapLayer","colorRange","id","pickable","getPosition","d","getWeight","radiusPixels","intensity","threshold","GeoJsonLayer","tempData","filled","pointRadiusMinPixels","pointRadiusScale","getRadius","f","getFillColor","autoHighlight","onClick","info","object","className","padding","margin","backgroundColor","zIndex","position","marginTop","left","display","flexDirection","paddingLeft","paddingRight","paddingBottom","Group","onChange","e","target","right","alignItems","justifyContent","type","marginBottom","href","initialViewState","controller","mapboxApiAccessToken","mapStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4592a622.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Typography } from \"antd\";\r\nimport { ArrowUpOutlined, ArrowDownOutlined } from \"@ant-design/icons\";\r\nimport { Statistic, Row, Col, Button } from \"antd\";\r\nimport \"../../node_modules/react-vis/dist/style.css\";\r\nimport {\r\n  XYPlot,\r\n  LineSeries,\r\n  VerticalGridLines,\r\n  HorizontalGridLines,\r\n  XAxis,\r\n  YAxis,\r\n  Hint,\r\n  MarkSeries,\r\n} from \"react-vis\";\r\nconst { Title, Text } = Typography;\r\n\r\nfunction oneMonthChangeCalculation(oneMonthArray) {\r\n  // calculate percentr change over one month of historic data\r\n  // (final - initial)/initial * 100\r\n  const chloroConcentrations = oneMonthArray.map((day) => day.y);\r\n  const percentChange =\r\n    ((chloroConcentrations.slice(-1)[0] - chloroConcentrations[0]) /\r\n      chloroConcentrations[0]) *\r\n    100;\r\n  return percentChange;\r\n}\r\n\r\nfunction getLastChlorophyllConc(oneMonthArray) {\r\n  // get last chloro value to present in side panel\r\n  const chloroConcentrations = oneMonthArray.map((day) => day.y);\r\n  const lastValue = chloroConcentrations.slice(-1)[0];\r\n  return lastValue;\r\n}\r\n\r\nfunction makeTimeSeriesAxes(month_data) {\r\n  let date_timeseries = [];\r\n  let timeseries = month_data;\r\n  for (let i = 0; i < timeseries.length; i++) {\r\n    date_timeseries.push({ x: new Date(timeseries[i].x), y: timeseries[i].y });\r\n  }\r\n  return date_timeseries;\r\n}\r\n\r\nfunction LocationSpecific(props) {\r\n  const [hoveredValue, setHoveredValue] = useState(null);\r\n  const _forgetValue = () => {\r\n    setHoveredValue(null);\r\n  };\r\n  const _rememberValue = (value) => {\r\n    setHoveredValue(value);\r\n  };\r\n\r\n  const { location } = props;\r\n  return (\r\n    <div>\r\n      <Title level={4}>{location.properties.name}</Title>\r\n      <Text strong>\r\n        {location.properties.ONE_MONTH[0].x} to{\" \"}\r\n        {location.properties.ONE_MONTH.slice(-1)[0].x}\r\n      </Text>\r\n      <Row>\r\n        <Col span={12}>\r\n          {oneMonthChangeCalculation(location.properties.ONE_MONTH) >= 0 ? (\r\n            <Statistic\r\n              title=\"1 month Chloro-a Change:\"\r\n              value={oneMonthChangeCalculation(location.properties.ONE_MONTH)}\r\n              precision={2}\r\n              valueStyle={{ color: \"#cf1322\" }}\r\n              prefix={<ArrowUpOutlined />}\r\n              suffix=\"%\"\r\n            />\r\n          ) : (\r\n            <Statistic\r\n              title=\"1 month Chloro-a Change:\"\r\n              value={oneMonthChangeCalculation(location.properties.ONE_MONTH)}\r\n              precision={2}\r\n              valueStyle={{ color: \"#3f8600\" }}\r\n              prefix={<ArrowDownOutlined />}\r\n              suffix=\"%\"\r\n            />\r\n          )}\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Current Chlorophyll Concentration\"\r\n            value={getLastChlorophyllConc(location.properties.ONE_MONTH)}\r\n            precision={2}\r\n            suffix=\"mg/ml\"\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row style={{ paddingTop: 3 }}>\r\n        <Text strong style={{ paddingTop: 6 }}>\r\n          {location.properties.ONE_FORECAST[0].x} to{\" \"}\r\n          {location.properties.ONE_FORECAST.slice(-1)[0].x}\r\n        </Text>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Chloro-a forecast (1 month)\"\r\n            value={location.properties.chloroAForecast}\r\n            precision={2}\r\n            suffix=\"mg/ml\"\r\n          />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Prediction interval (95% confidence)\"\r\n            value={location.properties.confidenceInterval[0].toFixed(2)}\r\n            precision={2}\r\n            suffix={\r\n              \"/\" +\r\n              location.properties.confidenceInterval[1].toFixed(2) +\r\n              \" mg/ml\"\r\n            }\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <XYPlot\r\n        xType=\"time\"\r\n        xPadding={30}\r\n        yPadding={30}\r\n        height={300}\r\n        width={300}\r\n        style={{ paddingTop: \"12\" }}\r\n      >\r\n        <VerticalGridLines />\r\n        <HorizontalGridLines />\r\n        <Title title=\"Chlorophyll-a concentration (mg/m^3)\" />\r\n        <XAxis tickLabelAngle={-30} />\r\n        <YAxis title=\"Chlorophyll-a concentration (mg/m^3)\" />\r\n        <LineSeries\r\n          color={\"#084AEE\"}\r\n          name={\"Historic\"}\r\n          data={makeTimeSeriesAxes(location.properties.ONE_MONTH)}\r\n        />\r\n        <LineSeries\r\n          color={\"#08ACEE\"}\r\n          name={\"Forecast\"}\r\n          data={makeTimeSeriesAxes(location.properties.ONE_FORECAST)}\r\n        />\r\n        <MarkSeries\r\n          size={3}\r\n          color={\"#084AEE\"}\r\n          onValueMouseOver={_rememberValue}\r\n          onValueMouseOut={_forgetValue}\r\n          data={makeTimeSeriesAxes(location.properties.ONE_MONTH)}\r\n        />\r\n        <MarkSeries\r\n          size={3}\r\n          color={\"#08ACEE\"}\r\n          onValueMouseOver={_rememberValue}\r\n          onValueMouseOut={_forgetValue}\r\n          data={makeTimeSeriesAxes(location.properties.ONE_FORECAST)}\r\n        />\r\n        {hoveredValue ? <Hint value={hoveredValue} /> : null}\r\n      </XYPlot>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction LocationGeneral() {\r\n  return (\r\n    <div>\r\n      <Title level={4}>United States</Title>\r\n      <Row>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Percent of states with harmful algae blooms annually\"\r\n            value={50}\r\n            suffix={\"%\"}\r\n            prefix={\">\"}\r\n          />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Percent of waterbodies with excessive nutrient input\"\r\n            value={65}\r\n            suffix={\"%\"}\r\n            prefix={\">\"}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Annual health costs\"\r\n            value={900_000_000}\r\n            precision={0}\r\n            prefix={\"$\"}\r\n          />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Dead Zone surface area\"\r\n            value={245000}\r\n            precision={0}\r\n            suffix={\"(sq. km.)\"}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function LocationReadout(props) {\r\n  const { location } = props;\r\n  return (\r\n    <div>{location ? LocationSpecific({ location }) : LocationGeneral()}</div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./App.css\";\r\nimport { StaticMap } from \"react-map-gl\";\r\nimport DeckGL, { GeoJsonLayer, HeatmapLayer } from \"deck.gl\";\r\nimport { Typography } from \"antd\";\r\nimport tempData from \"./data/data.json\";\r\nimport chlorData from \"./data/heatmap_data.json\";\r\nimport LocationReadout from \"./components/LocationReadout\";\r\nimport { Select, Radio } from \"antd\";\r\n\r\nconst { Option } = Select;\r\nconst { Title, Text } = Typography;\r\n\r\nconst MAPBOX_TOKEN =\r\n  \"pk.eyJ1IjoicGFudDIwMDIiLCJhIjoiY2prenlwb2ZtMHlnMjNxbW1ld3VxYWZ4cCJ9.rOb8DhCzsysBIw69MxyWKg\"; // eslint-disable-line\r\n\r\nconst AIR_PORTS =\r\n  \"https://d2ad6b4ur7yvpq.cloudfront.net/naturalearth-3.3.0/ne_10m_airports.geojson\";\r\n\r\nconst INITIAL_VIEW_STATE = {\r\n  latitude: 44.652382,\r\n  longitude: -83.902433,\r\n  zoom: 6,\r\n  bearing: 0,\r\n  pitch: 30,\r\n};\r\n\r\nconst pinsColorRange = [\r\n  [1, 152, 189],\r\n  [73, 227, 206],\r\n  [216, 254, 181],\r\n  [254, 237, 177],\r\n  [254, 173, 84],\r\n  [209, 55, 78],\r\n];\r\n\r\nconst heatmapColorRange = [\r\n  // [255, 255, 178],\r\n  [254, 217, 118],\r\n  [254, 178, 76],\r\n  [253, 141, 60],\r\n  [240, 59, 32],\r\n  [189, 0, 38],\r\n];\r\n\r\nfunction App() {\r\n  const [vizType, setVizType] = useState(\"pins\");\r\n  const [location, setLocation] = useState(null);\r\n\r\n  const onClick = (info) => {\r\n    if (info.object) {\r\n      setLocation(info.object);\r\n    }\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    setVizType(e.target.value);\r\n  };\r\n\r\n  const layers = [\r\n    chlorData && vizType === \"heatmap\"\r\n      ? new HeatmapLayer({\r\n          data: chlorData,\r\n          colorRange: heatmapColorRange,\r\n          id: \"heatmp-chlor\",\r\n          pickable: true,\r\n          getPosition: (d) => [d[1], d[0]],\r\n          getWeight: (d) => d[2],\r\n          radiusPixels: 25,\r\n          intensity: 1,\r\n          threshold: 0.05,\r\n        })\r\n      : vizType === \"pins\"\r\n      ? new GeoJsonLayer({\r\n          id: \"tempData\",\r\n          data: tempData,\r\n          // Styles\r\n          filled: true,\r\n          pointRadiusMinPixels: 2,\r\n          pointRadiusScale: 2000,\r\n          getRadius: (f) => 5,\r\n          /// [0, 2], (2, 4], (4, 6], (6, 8], (8, 10]\r\n          getFillColor: (f) => {\r\n            if (f.properties.chloroAForecast <= 1.6666666667) {\r\n              return pinsColorRange[0];\r\n            } else if (\r\n              f.properties.chloroAForecast > 1.6666666667 &&\r\n              f.properties.chloroAForecast <= 3.3333333334\r\n            ) {\r\n              return pinsColorRange[1];\r\n            } else if (\r\n              (f.properties.chloroAForecast > 3.3333333334) &\r\n              (f.properties.chloroAForecast <= 5.0000000001)\r\n            ) {\r\n              return pinsColorRange[2];\r\n            } else if (\r\n              (f.properties.chloroAForecast > 5.0000000001) &\r\n              (f.properties.chloroAForecast <= 6.6666666668)\r\n            ) {\r\n              return pinsColorRange[3];\r\n            } else if (\r\n              (f.properties.chloroAForecast > 6.6666666668) &\r\n              (f.properties.chloroAForecast <= 8.3333333335)\r\n            ) {\r\n              return pinsColorRange[4];\r\n            } else if (\r\n              (f.properties.chloroAForecast > 8.3333333335) &\r\n              (f.properties.chloroAForecast <= 10)\r\n            ) {\r\n              return pinsColorRange[5];\r\n            }\r\n          },\r\n          // Interactive props\r\n          pickable: true,\r\n          autoHighlight: true,\r\n          onClick,\r\n        })\r\n      : null,\r\n  ];\r\n\r\n  return (\r\n    <div\r\n      className=\"container\"\r\n      style={{ height: \"100vh\", width: \"100vw\", padding: 0, margin: 0 }}\r\n    >\r\n      <div\r\n        style={{\r\n          backgroundColor: \"white\",\r\n          zIndex: \"1000\",\r\n          position: \"absolute\",\r\n          marginTop: \"1.0%\",\r\n          left: \"1.5%\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          paddingLeft: \"20px\",\r\n          paddingRight: \"20px\",\r\n          paddingTop: \"12px\",\r\n          paddingBottom: \"12px\",\r\n        }}\r\n      >\r\n        <Radio.Group onChange={onChange} value={vizType}>\r\n          <Radio value={\"pins\"}>Pins</Radio>\r\n          <Radio value={\"heatmap\"}>Cholorophyll-a Heatmap</Radio>\r\n        </Radio.Group>\r\n      </div>\r\n      <div\r\n        style={{\r\n          backgroundColor: \"white\",\r\n          zIndex: \"1000\",\r\n          position: \"absolute\",\r\n          marginTop: \"1.0%\",\r\n          right: \"1.5%\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          width: \"360px\",\r\n          paddingLeft: \"20px\",\r\n          paddingRight: \"20px\",\r\n          paddingTop: \"12px\",\r\n          paddingBottom: \"12px\",\r\n        }}\r\n      >\r\n        <Title level={3}>Bloom Early Detection</Title>\r\n        <Text>An investigation in bloom early prediction.</Text>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-evenly\",\r\n            paddingTop: \"16px\",\r\n          }}\r\n        >\r\n          {vizType === \"pins\"\r\n            ? pinsColorRange.map((color) => (\r\n                <div\r\n                  style={{\r\n                    width: \"16.6667%\",\r\n                    height: \"18px\",\r\n                    backgroundColor: `rgb(${color[0]}, ${color[1]}, ${color[2]})`,\r\n                  }}\r\n                />\r\n              ))\r\n            : heatmapColorRange.map((color) => (\r\n                <div\r\n                  style={{\r\n                    width: \"20%\",\r\n                    height: \"18px\",\r\n                    backgroundColor: `rgb(${color[0]}, ${color[1]}, ${color[2]})`,\r\n                  }}\r\n                />\r\n              ))}\r\n        </div>\r\n        {vizType === \"pins\" ? (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n              paddingTop: \"2px\",\r\n            }}\r\n          >\r\n            <Text type=\"secondary\">No risk</Text>\r\n            <Text type=\"secondary\">Risk of HAB</Text>\r\n          </div>\r\n        ) : (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n              paddingTop: \"2px\",\r\n            }}\r\n          >\r\n            <Text type=\"secondary\">Low concentration</Text>\r\n            <Text type=\"secondary\">High concentration</Text>\r\n          </div>\r\n        )}\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            paddingTop: 12,\r\n            marginBottom: 6,\r\n          }}\r\n        >\r\n          <LocationReadout location={location} />\r\n        </div>\r\n        <div style={{ paddingTop: \"24px\", paddingLeft: \"60%\" }}>\r\n          <Text>\r\n            View Code:{\" \"}\r\n            <a href=\"https://github.com/forensx/bloom-early-detection\">\r\n              GitHub\r\n            </a>\r\n          </Text>\r\n        </div>\r\n      </div>\r\n      <div\r\n        style={{\r\n          zIndex: \"-1\",\r\n        }}\r\n      >\r\n        <DeckGL\r\n          initialViewState={INITIAL_VIEW_STATE}\r\n          controller={true}\r\n          layers={layers}\r\n        >\r\n          <StaticMap\r\n            mapboxApiAccessToken={MAPBOX_TOKEN}\r\n            mapStyle=\"mapbox://styles/mapbox/satellite-v9\"\r\n          />\r\n        </DeckGL>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}